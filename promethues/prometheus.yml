# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - "localhost:9093"

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert-rules/*.yaml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
       # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
        labels:
          app: "prometheus"
  - job_name: 'ec2_instances'
    ec2_sd_configs:
      - region: us-east-1
        port: 9100
        filters:
          - name: "tag:Monitoring"
            values: ["true"]
    relabel_configs:
      # Rename the EC2 tag "Name" to the label "ec2_name"
      - source_labels: [__meta_ec2_tag_Name]
        target_label: name
      # Rename the EC2 instance ID to the label "instance_id"
      - source_labels: [__meta_ec2_instance_id]
        target_label: instance_id

  # - job_name: "node-1"

  #   # metrics_path defaults to '/metrics'
  #   # scheme defaults to 'http'.

  #   static_configs:
  #     - targets: ["172.31.35.112:9100"]
  #      # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
  #       labels:
  #         app: "node-1"
  #         name: "node-1"
  